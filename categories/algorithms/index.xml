<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithms on Alvin&#39;s Site</title>
    <link>http://alvinzheng-rgb.github.io/categories/algorithms/</link>
    <description>Recent content in algorithms on Alvin&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Oct 2023 21:16:36 +0800</lastBuildDate><atom:link href="http://alvinzheng-rgb.github.io/categories/algorithms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>同概率输出序列的某一元素（不使用额外空间）</title>
      <link>http://alvinzheng-rgb.github.io/note/2023/10/13/output-uniformly-at-random/</link>
      <pubDate>Fri, 13 Oct 2023 21:16:36 +0800</pubDate>
      
      <guid>http://alvinzheng-rgb.github.io/note/2023/10/13/output-uniformly-at-random/</guid>
      <description>Problem Reading a sequence of words from standard input and prints one of those words uniformly at random. Do not store the words in an array or list.
Method Knuth’s method: when reading the ith word, select it with probability 1/i to be the champion, replacing the previous champion. After reading all of the words, print the surviving champion.
Why it works For the ith member, its probability of becoming a champion is……</description>
    </item>
    
  </channel>
</rss>
